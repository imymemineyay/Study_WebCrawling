<학교 이름 = "나노 고등학교"> 🩷 부모 
    <학년 value='1학년'>   🩷 (학교기준으로) 자식, 🩷 (반기준으로) 부모
        <반 value='1반'>  🩷 (학년기준으로) 자식 
            <학생 value='1번' 학번='1-1-1'>이지은</학생>  💙 학생 태그들은 서로 형제관계 sibling
            <학생 value='2번' 학번='1-1-2'>유재석</학생>
            <학생 value='3번' 학번='1-1-3'>조세호</학생>
            <학생 value='4번' 학번='1-1-4'>박명수</학생>
            <학생 value='5번' 학번='1-1-5'>이지은</학생>
        </반>
        <반 value='2반'/>
        <반 value='3반'/>
        <반 value='4반'/>
    </학년>
    <학년 value='2학년'/> ...3반 유재석... 
    <학년 value='3학년'/>
</학교>

만약에 '1학년 이지은 학생 교무실로 오세요'라고 했을 경우,
어떤 이지은인지 모를 수 있다
👉🏼 html 비슷한 요소가 있을 경우 어떠한 요소를 지칭하는지 명확하게 
하기 위해서 xpath(html 문서에 있는 특정 element의 주소) 사용

xpath의 구성
: /학교/학년/반/학생(2)  
: /html/body/div/span/a...   (전체 경로 사용 가능)
👉🏼 맨 처음 시작하는 경로로 부터 하나씩 따와서 구성하는 것
👉🏼 똑같은 태그는 인덱스를 이용하여 구분됨

만약에 '1-1-5번 학생 교무실로 오세요' 라고 했을 경우는 유니크해짐
👉🏼 간편하게 말할 수 있어짐

xpath의 구성
//*[@학번='1-1-5']  (id나 속성같은 특징 이용해서 쉽고 간편하게 표현 가능)
: //*[@id='login'] → 아이디가 로그인인 것을 문서에서 찾아주세요

슬래쉬(/)에 대해서
: / 는 현재 위치에서 부터 한 단계 아래
: // 는 현재 위치에서 부터 모든 하위 노드들에 대해 찾는 것

별(*)에 대해서
: * 태그 상관없이 모두에서 찾는 것

@에 대해서
: @ 속성 

네이버의 로그인 바 xpath와 xpathfull 살펴보기
: //*[@id='account']/a 
: /html/body/div/div[2]/div[2]/div[3]/div/div[2]/accessible


🩷 부모 : element 들을 포함하는 것들
🩷 자식 : element에 포함되어 있는 것들
💙 형제관계 sibling : 같은 위치에 있는 것들 


